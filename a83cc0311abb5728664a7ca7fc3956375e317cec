{
  "comments": [
    {
      "key": {
        "uuid": "23c13e90_55f18bb6",
        "filename": "jjb/vpp/vpp-csit-perf-bisect.sh",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 76
      },
      "writtenOn": "2019-12-17T07:32:00Z",
      "side": 1,
      "message": "Naming convention is include-raw-vpp-...",
      "revId": "a83cc0311abb5728664a7ca7fc3956375e317cec",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c673fe0b_a7e4f01d",
        "filename": "jjb/vpp/vpp-csit-perf-bisect.sh",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1263
      },
      "writtenOn": "2019-12-18T17:07:13Z",
      "side": 1,
      "message": "Separated to a new parent change [0] so we can discuss file naming there.\n\n[0] https://gerrit.fd.io/r/c/ci-management/+/24057",
      "parentUuid": "23c13e90_55f18bb6",
      "revId": "a83cc0311abb5728664a7ca7fc3956375e317cec",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "093034b4_d7d5330c",
        "filename": "jjb/vpp/vpp-csit-perf-bisect.sh",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1263
      },
      "writtenOn": "2019-12-18T17:21:05Z",
      "side": 1,
      "message": "I mean [1], as that is a convention for jjb/vpp (as opposed to jjb/csit), which I already violated in past by adding check_crc.sh file.\n\n[1] https://gerrit.fd.io/r/c/ci-management/+/24059",
      "parentUuid": "c673fe0b_a7e4f01d",
      "revId": "a83cc0311abb5728664a7ca7fc3956375e317cec",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b7995f24_deeceba0",
        "filename": "jjb/vpp/vpp-macros.yaml",
        "patchSetId": 7
      },
      "lineNbr": 85,
      "author": {
        "id": 76
      },
      "writtenOn": "2019-12-17T07:32:00Z",
      "side": 1,
      "message": "so \n\ngerrit-trigger-csit-perftest\ngerrit-trigger-csit-devicetest-full\ngerrit-trigger-csit-devicetest-manual \u003c--why do we have this???\ngerrit-trigger-csit-bisectperftest\ngerrit-trigger-csit-bisectdevicetest\n\nsimilarly trigger? What if we want to bisect via devicetest?",
      "range": {
        "startLine": 85,
        "startChar": 0,
        "endLine": 85,
        "endChar": 4
      },
      "revId": "a83cc0311abb5728664a7ca7fc3956375e317cec",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "beda75f6_117f57fe",
        "filename": "jjb/vpp/vpp-macros.yaml",
        "patchSetId": 7
      },
      "lineNbr": 85,
      "author": {
        "id": 1263
      },
      "writtenOn": "2019-12-18T18:00:59Z",
      "side": 1,
      "message": "\u003e What if we want to bisect via devicetest?\n\nNot supported at all. Similar situation to gerrit-trigger-csit-perftest which only works for mrr, as in BMRR tuple of values. No latency, no ndrpdr/soak bounds, no reconf time. No functional passrate.\n\nI think it is not worth keeping macro names long just for future features. For line 85 it is derived from the job name, but I can shorten to gerrit-trigger-csit-bisect or even gerrit-trigger-bisect (with or without shortening the job name).\nAny preferences?",
      "parentUuid": "b7995f24_deeceba0",
      "range": {
        "startLine": 85,
        "startChar": 0,
        "endLine": 85,
        "endChar": 4
      },
      "revId": "a83cc0311abb5728664a7ca7fc3956375e317cec",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    }
  ]
}